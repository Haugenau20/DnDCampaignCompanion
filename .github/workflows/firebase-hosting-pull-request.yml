# .github/workflows/firebase-hosting-pull-request.yml

name: Deploy to Firebase Hosting on PR
on: pull_request
permissions:
  checks: write
  contents: read
  pull-requests: write
jobs:
  build_and_preview:
    if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      # Build app in Docker container and extract build artifacts
      - name: Build app in container
        run: |
          # Create production env file from GitHub Secrets
          echo "REACT_APP_USE_EMULATORS=false" > .env
          echo "REACT_APP_API_KEY=${{ secrets.REACT_APP_API_KEY }}" >> .env
          echo "REACT_APP_AUTH_DOMAIN=${{ secrets.REACT_APP_AUTH_DOMAIN }}" >> .env
          echo "REACT_APP_PROJECT_ID=${{ secrets.REACT_APP_PROJECT_ID }}" >> .env
          echo "REACT_APP_STORAGE_BUCKET=${{ secrets.REACT_APP_STORAGE_BUCKET }}" >> .env
          echo "REACT_APP_MESSAGING_SENDER_ID=${{ secrets.REACT_APP_MESSAGING_SENDER_ID }}" >> .env
          echo "REACT_APP_APP_ID=${{ secrets.REACT_APP_APP_ID }}" >> .env
          
          # Build using Docker
          docker build -t app-builder -f docker/Dockerfile.frontend.prod .
          docker create --name temp-container app-builder
          docker cp temp-container:/usr/share/nginx/html ./build
          docker rm temp-container
      
      # Deploy to Firebase Hosting
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_DND_CAMPAIGN_COMPANION }}
          projectId: dnd-campaign-companion
          entryPoint: ./firebase
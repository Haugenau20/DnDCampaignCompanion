# Prioritized Todo List

NOTE-TAKING:
    - Implement usage throttling / limit / similar

1. User should be able to change their password.

2. Have registration tokens expire after X days

4. F12 console Error in StoryContext when it is trying to update "current-progress"
    - I think this is a remnant of purposefully unused functionality and it should just be deleted. 
    - It seems to be deeply embedded in the codebase. Remove it entirely all around.

5. Fix/Implement proper searching

6. Fix mobile layout issues on certain pages. (Big update)

8. Make active quests be on the top of the list?

9. Make completed quests be default hidden with option to expand?

10. Add batch options (Delete, change status, etc.) for Story, Quest, NPC, and Location features

11. Implement/review proper highlighting logic to pages.

12. Admin Panel:
    - Test if the creation of new groups and campaigns work
    - Right now the "groups" view only shows the current group. 
    - Campaigns can be created. 
    - groups cannot be created
    - neither campaigns or groups can be edited.
    - campaigns cannot be deleted.

13. New feature idea (partly implemented already): sub-chapters.

14. New feature idea: note taking in the app.

15. CLAUDE Code: 

15.1. Major do-over of the project structure

15.2. Update README


Not prioritized yet:

Make a dedicated page for profile options

Form/Context Responsibility Pattern Standardization (look at docs/backlog/FormContextStandard)

NPCs Page seems to take longer to load than the rest of the pages.

Not signed in UI must be updated and made the same on every page.

Make project true Single Page Application.


Based on my search, I've identified several concerning security issues in your codebase:

  1. Exposed Firebase API Keys: Your Firebase configuration in src/services/firebase/config/firebaseConfig.ts contains hardcoded
   API keys.
  2. Permissive Firebase Rules: Both Firestore and Storage rules are set to allow unrestricted access with allow read, write: if
   true; in development mode.
  4. Weak Authorization Checks: The isGroupMember() function doesn't properly verify group membership.
  5. Client-side API Keys: API keys for external services should not be included in client-side code.
  6. Missing Input Sanitization: There appears to be inadequate sanitization for user inputs, creating potential XSS
  vulnerabilities.